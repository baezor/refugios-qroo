---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '../i18n/utils';
import LanguagePicker from './LanguagePicker.astro';

const pathname = new URL(Astro.request.url).pathname;
let currentPath = pathname.slice(1); // remove the first "/"

// Get the current language from the URL
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

// If the path starts with the current language, remove it
if (currentPath.startsWith(`${lang}/`)) {
  currentPath = currentPath.slice(lang.length + 1); // +1 for the slash
} else if (currentPath === lang) {
  currentPath = "";
}
---

<nav>
  <div class="nav-container">
    <div class="nav-links">
      <a href={translatePath('/')} class={currentPath === "" ? "active" : ""}>
        {t('nav.shelters')}
      </a>
      <a href={translatePath(lang === 'en' ? '/map' : '/mapa')} class={currentPath === (lang === 'en' ? "map" : "mapa") ? "active" : ""}>
        {t('nav.map')}
      </a>
    </div>
    <LanguagePicker />
  </div>
</nav>

<style>
  nav {
    background-color: #fff;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    padding: 1rem 0;
    position: sticky;
    top: 0;
    z-index: 100;
  }

  .nav-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .nav-links {
    display: flex;
    gap: 2rem;
  }

  a {
    color: #333;
    text-decoration: none;
    font-weight: 500;
    font-size: 1.1rem;
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
  }

  a:hover {
    color: #92153F;
    background-color: rgba(146, 21, 63, 0.05);
  }

  a.active {
    color: #92153F;
    font-weight: 700;
    border-bottom: 2px solid #92153F;
  }

  @media (max-width: 768px) {
    .nav-links {
      gap: 1rem;
    }

    a {
      font-size: 1rem;
      padding: 0.5rem;
    }
  }
</style>