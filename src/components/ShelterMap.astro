---
// ShelterMap.astro - Reusable map component for displaying shelters
import { getLangFromUrl, useTranslations } from '../i18n/utils';

interface Props {
  shelters: any[];
}

const { shelters } = Astro.props;

// Get language from URL
const lang = getLangFromUrl(Astro.url);

// Filter shelters that have coordinates
const sheltersWithCoordinates = shelters.filter(shelter => 
  shelter.coordinates && shelter.coordinates.lat && shelter.coordinates.lng
);
---

<div class="map-container">
  <div id="map"></div>
</div>

{sheltersWithCoordinates.length > 0 && (
  <script is:inline define:vars={{ sheltersWithCoordinates }}>
    // Global variables for map management
    window.refugioMapInstance = window.refugioMapInstance || null;
    
    // Define the initialization function in the global scope
    window.initializeRefugioMap = function() {
      // Check if map element exists before initializing
      const mapElement = document.getElementById("map");
      if (!mapElement) {
        console.log('Map element not found, skipping map initialization');
        return; // Exit if map element doesn't exist
      }
      
      // Check if Leaflet is loaded
      if (typeof L === 'undefined') {
        console.log('Leaflet not loaded yet, waiting...');
        return; // Exit if Leaflet is not loaded yet
      }
      
      // Check if map is already initialized
      if (window.refugioMapInstance) {
        console.log('Map already initialized');
        return;
      }
      
      try {
        console.log('Initializing map with Leaflet');
        // Create the map to show the entire state of Quintana Roo
        // Coordinates are centered more toward the middle of the state with a lower zoom level
        const map = L.map('map').setView([20.2, -87.3], 7); // Adjusted to show the entire state
        
        // Store map instance for cleanup
        window.refugioMapInstance = map;
        
        // Add OpenStreetMap tile layer
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
          maxZoom: 19,
          attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Add Quintana Roo state boundary with official data
        fetch('/quintana-roo-boundary.json')
          .then(response => response.json())
          .then(data => {
            // Add the state boundary with more subtle styling
            L.geoJSON(data, {
              style: {
                color: '#AB0A3D', // Match the site's color scheme
                weight: 1.5,      // Thinner line
                opacity: 0.5,     // More transparent
                fillColor: '#AB0A3D',
                fillOpacity: 0.02,  // Very subtle fill
                dashArray: '3, 5'  // Smaller dashes
              }
            }).addTo(map);
            
            // Adjust the map view to fit the boundary if needed
            // This ensures the entire state is visible
            map.fitBounds(L.geoJSON(data).getBounds(), {
              padding: [20, 20], // Add some padding around the boundary
              maxZoom: 8 // Limit how far it will zoom in
            });
          })
          .catch(error => console.error('Error loading state boundary:', error));

        // Add markers for each shelter with coordinates
        sheltersWithCoordinates.forEach(shelter => {
          if (shelter.coordinates && shelter.coordinates.lat && shelter.coordinates.lng) {
            // Create a custom marker with the exact primary color #92153F
            const customIcon = L.icon({
              iconUrl: '/images/markers/custom-marker.svg', // Using custom SVG with exact color
              shadowUrl: '/images/markers/marker-shadow.png', // Using local shadow
              iconSize: [25, 41],
              iconAnchor: [12, 41],
              popupAnchor: [1, -34],
              shadowSize: [41, 41]
            });
            
            // Create the marker with the custom icon
            const marker = L.marker([shelter.coordinates.lat, shelter.coordinates.lng], {
              icon: customIcon
            }).addTo(map);
            
            // Create popup content
            const content = `
              <div class="info-window">
                <h3>${shelter.EDIFICIO}</h3>
                <p><strong>Municipio:</strong> ${shelter.MUNICIPIO}</p>
                <p><strong>Localidad:</strong> ${shelter.LOCALIDAD}</p>
                <p><strong>Domicilio:</strong> ${shelter.DOMICILIO}</p>
              </div>
            `;
            
            // Bind popup to marker
            marker.bindPopup(content);
          }
        });
        
        console.log('Map initialized successfully');
      } catch (error) {
        console.error('Error creating map or markers:', error);
        mapElement.innerHTML = '<div style="padding: 20px; text-align: center;"><p>Error loading map. Please try again later.</p></div>';
      }
    };
    
    // Check if Leaflet CSS is already loaded
    if (!document.querySelector('link[href*="leaflet.css"]')) {
      // Add Leaflet CSS to head
      const leafletCSSLink = document.createElement('link');
      leafletCSSLink.rel = 'stylesheet';
      leafletCSSLink.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';
      leafletCSSLink.integrity = 'sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=';
      leafletCSSLink.crossOrigin = '';
      document.head.appendChild(leafletCSSLink);
    }
    
    // Function to load Leaflet JS if not already loaded
    function loadLeafletJS() {
      if (window.L) {
        // Leaflet is already loaded, initialize map
        window.initializeRefugioMap();
        return;
      }
      
      if (!document.querySelector('script[src*="leaflet.js"]')) {
        // Add Leaflet JS to head
        const leafletScriptElement = document.createElement('script');
        leafletScriptElement.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';
        leafletScriptElement.integrity = 'sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=';
        leafletScriptElement.crossOrigin = '';
        leafletScriptElement.onload = function() {
          window.initializeRefugioMap();
        };
        document.head.appendChild(leafletScriptElement);
      }
    }
    
    // Load Leaflet when the page is ready
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
      setTimeout(loadLeafletJS, 100);
    } else {
      document.addEventListener('DOMContentLoaded', function() {
        setTimeout(loadLeafletJS, 100);
      });
    }
    
    // Also handle Astro page transitions
    document.addEventListener('astro:page-load', function() {
      setTimeout(loadLeafletJS, 100);
    });
    
    // Clean up map on page navigation
    document.addEventListener('astro:before-swap', function() {
      // If there's a map instance, remove it to prevent memory leaks
      if (window.refugioMapInstance) {
        window.refugioMapInstance.remove();
        window.refugioMapInstance = null;
        console.log('Cleaning up map before page navigation');
      }
    });
  </script>
)}

<style>
  .map-container {
    width: 100%;
    height: 70vh;
    margin: 2rem 0;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 8px rgba(171, 10, 61, 0.2);
    border: 2px solid #AB0A3D;
  }

  #map {
    width: 100%;
    height: 100%;
  }

  /* Custom marker styling is now handled by SVG */

  :global(.info-window) {
    padding: 5px;
    max-width: 300px;
  }

  :global(.info-window h3) {
    margin-top: 0;
    margin-bottom: 8px;
    color: #92153F; /* Updated to match the exact primary color */
  }

  :global(.info-window p) {
    margin: 5px 0;
    font-size: 14px;
    text-align: left;
  }
</style>
